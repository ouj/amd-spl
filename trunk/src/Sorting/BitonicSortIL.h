#ifndef _AMDSPL_BITONICSORT_CALCODE_H
#define _AMDSPL_BITONICSORT_CALCODE_H

#include "ProgramInfo.h"

using namespace amdspl::core::cal;

namespace amdspl
{
    typedef ProgramInfo<1, 1, 4, false> FloatAscBitonicSortProgram;
    DCL_PROGRAM_ID(FloatAscBitonicSortProgram) = "Float Ascend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(FloatAscBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l0, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "sample_resource(0)_sampler(0) r5, v0.xy00\n"
        "ftoi r1.xy__, v0.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r3.x___, cb0[2].x000, l0.x000\n"
        "and r3.x___, r1.x000, r3.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l0.y000, l0.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l0.y000\n"
        "ieq r4.x___, r4.x000, l0.z000\n"
        "cmov_logical r4.x___, r4.x000, l0.y000, l0.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r6, r2.xy00\n"
        "lt r7, r5, r6\n"
        "cmov_logical r8, r7, r5, r6\n"
        "cmov_logical r9, r7, r6, r5\n"
        "ieq r10, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r10, r8, r9\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> FloatDesBitonicSortProgram;
    DCL_PROGRAM_ID(FloatDesBitonicSortProgram) = "Float Descend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(FloatDesBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "lt r100, r11, r22\n"
        "cmov_logical r5, r100, r22, r11\n"
        "cmov_logical r6, r100, r11, r22\n"
        "ieq r44, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> IntegerAscBitonicSortProgram;
    DCL_PROGRAM_ID(IntegerAscBitonicSortProgram) = "Integer Ascend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(IntegerAscBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "ilt r100, r11, r22\n"
        "cmov_logical r5, r100, r11, r22\n"
        "cmov_logical r6, r100, r22, r11\n"
        "ieq r44, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> IntegerDesBitonicSortProgram;
    DCL_PROGRAM_ID(IntegerDesBitonicSortProgram) = "Integer Desend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(IntegerDesBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "ilt r100, r11, r22\n"
        "cmov_logical r5, r100, r22, r11\n"
        "cmov_logical r6, r100, r11, r22\n"
        "ieq r44, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> UnsignedIntegerAscBitonicSortProgram;
    DCL_PROGRAM_ID(UnsignedIntegerAscBitonicSortProgram) = "Unsigned Integer Ascend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(UnsignedIntegerAscBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "ult r100, r11, r22\n"
        "cmov_logical r5, r100, r11, r22\n"
        "cmov_logical r6, r100, r22, r11\n"
        "ieq r44, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> UnsignedIntegerDesBitonicSortProgram;
    DCL_PROGRAM_ID(UnsignedIntegerDesBitonicSortProgram) = "Unsigned Integer Desend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(UnsignedIntegerDesBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "ult r100, r11, r22\n"
        "cmov_logical r5, r100, r22, r11\n"
        "cmov_logical r6, r100, r11, r22\n"
        "ieq r44, r3.x000, r4.x000\n"
        "cmov_logical o0.x___, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> DoubleAscBitonicSortProgram;
    DCL_PROGRAM_ID(DoubleAscBitonicSortProgram) = "Double Ascend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(DoubleAscBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "dlt r100, r11, r22\n"
        "cmov_logical r5, r100, r11, r22\n"
        "cmov_logical r6, r100, r22, r11\n"
        "ieq r44, r3.xx00, r4.xx00\n"
        "cmov_logical o0.xy__, r44, r5, r6\n"
        "endmain\n"
        "end\n";

    typedef ProgramInfo<1, 1, 4, false> DoubleDesBitonicSortProgram;
    DCL_PROGRAM_ID(DoubleDesBitonicSortProgram) = "Double Desend Bitonic Sort Program Info";
    DCL_PROGRAM_SOURCE(DoubleDesBitonicSortProgram) = 
        "il_ps_2_0\n"
        "dcl_output_generic o0\n"
        "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
        "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
        "dcl_literal l1, 0xFFFFFFFF, 0x00000001, 0x00000000, 0xFFFFFFFF\n"
        "dcl_cb cb0[4]\n"
        "mov r1.xy__, v0\n"
        "sample_resource(0)_sampler(0) r11, r1.xy00\n"
        "ftoi r1.xy__, r1.xy00\n"
        "imul r1._y__, r1.0y00, cb0[3].0x00\n"
        "iadd r1.x___, r1.y000, r1.x000\n"
        "iadd r10.x___, cb0[2].x000, l1.x000\n"
        "and r3.x___, r1.x000, r10.x000\n"
        "ilt r3.x___, r3.x000, cb0[1].x000\n"
        "cmov_logical r3.x___, r3.x000, l1.y000, l1.x000\n"
        "ishr r4.x___, r1.x000, cb0[0].x000\n"
        "and r4.x___, r4.x000, l1.y000\n"
        "ieq r4.x___, r4.x000, l1.z000\n"
        "cmov_logical r4.x___, r4.x000, l1.y000, l1.x000\n"
        "imul r2.x___, r3.x000, cb0[1].x000\n"
        "iadd r2.x___, r2.x000, r1.x000\n"
        "udiv r2._y__, r2.0x00, cb0[3].0x00\n"
        "imul r7.x___, r2.y000, cb0[3].x000_neg(x)\n"
        "iadd r2.x___, r2.x000, r7.x000\n"
        "itof r2, r2\n"
        "sample_resource(0)_sampler(0) r22, r2.xy00\n"
        "dlt r100, r11, r22\n"
        "cmov_logical r5, r100, r22, r11\n"
        "cmov_logical r6, r100, r11, r22\n"
        "ieq r44, r3.xx00, r4.xx00\n"
        "cmov_logical o0.xy__, r44, r5, r6\n"
        "endmain\n"
        "end\n";

}
#endif // _AMDSPL_SORT_CALCODE_H
