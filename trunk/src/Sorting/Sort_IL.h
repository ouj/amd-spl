#ifndef _AMDSPL_BITONICSORT_CALCODE_H
#define _AMDSPL_BITONICSORT_CALCODE_H

#include "ILParaInfo.h"
#include "ILParaList.h"

namespace amdspl
{
        enum SORT_ILPROGRAMS_INDEX
        {
            BITONIC_INIT_IL,
            BITONIC_SORT_IL,
            BITONIC_SORT_AT_IL
        };

        typedef AppendILPara<ILParaEnd,     ILParaInfo<BITONIC_SORT_IL, 1, 1, 3>>::Result       T1; // BITONIC_SORT_IL
        typedef AppendILPara<T1,            ILParaInfo<BITONIC_SORT_AT_IL, 1, 1, 7>>::Result    T2; // BITONIC_SORT_AT_IL
        typedef AppendILPara<T2,            ILParaInfo<BITONIC_INIT_IL, 0, 1, 1>>::Result    T3; // BITONIC_SORT_AT_IL
        typedef T3                                                                              SORT_ILPARA_LIST;

        const char* ILParaByID<SORT_ILPARA_LIST, BITONIC_INIT_IL>::Result::Image = 
            "il_ps_2_0\n"
            "dcl_output_generic o0\n"
            "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
            "dcl_cb cb0[1]\n"
            "mov o0, cb0[0]\n"
            "endmain\n"
            "end\n";

        const char* ILParaByID<SORT_ILPARA_LIST, BITONIC_SORT_IL>::Result::Image = 
            "il_ps_2_0\n"
            "dcl_output_generic o0\n"
            "dcl_resource_id(0)_type(1d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
            "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
            "dcl_literal l0, 0x3F000000, 0x40000000, 0x00000000, 0x3F800000\n"
            "dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
            "dcl_cb cb0[3]\n"
            "mov r1.xy__, v0\n"
            "sample_resource(0)_sampler(0) r11, r1.x000\n"
            "ftoi r1, r1\n"
            "itof r1.x___, r1.x000\n"
            "mod r3.x___, r1.x000, cb0[2].x000\n"
            "lt r3.x___, r3.x000, cb0[1].x000\n"
            "cmov_logical r3.x___, r3.x000, l0.w000, l0.w000_neg(xyzw)\n"
            "div_zeroop(infinity) r4.x___, r1.x000, cb0[0].x000\n"
            "round_neginf r4.x___, r4.x000\n"
            "mod r4.x___, r4.x000, l0.y000\n"
            "eq r4.x___, r4.x000, l0.z000\n"
            "cmov_logical r4.x___, r4.x000, l0.w000, l0.w000_neg(xyzw)\n"
            "mul_ieee r2.x___, r3.x000, cb0[1].x000\n"
            "add r2.x___, r2.x000, r1.x000\n"
            "sample_resource(0)_sampler(0) r22, r2.x000\n"
            "lt r100, r11, r22\n"
            "cmov_logical r5, r100, r11, r22\n"
            "cmov_logical r6, r100, r22, r11\n"
            "eq r44, r3.x000, r4.x000\n"
            "cmov_logical o0, r44, r5, r6\n"
            "endmain\n"
            "end\n";

        const char* ILParaByID<SORT_ILPARA_LIST, BITONIC_SORT_AT_IL>::Result::Image = 
            "il_ps_2_0\n"
            "dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
            "dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
            "dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
            "dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
            "dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
            "dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
            "dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
            "dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
            "dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
            "dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
            "dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
            "dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
            "dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
            "dcl_literal l13,0x3F800000,0x3F800000,0x3F800000,0x3F800000\n"
            "dcl_literal l14,0x40000000,0x40000000,0x40000000,0x40000000\n"
            "dcl_output_usage(generic) o0.xyzw\n"
            "dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
            "dcl_input_position_interp(linear_noperspective) v0.xy__\n"
            "dcl_cb cb0[8]\n"
            "mov r422.xy__,v0.xyzw\n"
            "mov r325.xyzw,cb0[l0.x + 0].xyzw\n"
            "mov r326.xyzw,cb0[l0.x + 1].xyzw\n"
            "mov r327.x___,cb0[l0.x + 2].x000\n"
            "mov r328.xyz_,cb0[l0.x + 2].yzw0\n"
            "mov r329.x___,cb0[l0.x + 3].x000\n"
            "mov r330.xyz_,cb0[l0.x + 3].yzw0\n"
            "mov r331.x___,cb0[l0.x + 4].x000\n"
            "mov r332.xyz_,cb0[l0.x + 4].yzw0\n"
            "mov r333.xy__,cb0[l0.x + 5].xy00\n"
            "mov r334.xy__,cb0[l0.x + 5].zw00\n"
            "mov r335.xyzw,cb0[l0.x + 6].xyzw\n"
            "mov r336.xyzw,cb0[l0.x + 7].xyzw\n"
            "call 42 \n"
            "call 0 \n"
            "endmain\n"
            "\n"
            "func 0\n"
            "mov o0.xyzw,r421.xyzw\n"
            "ret\n"
            "\n"
            "func 2\n"
            "ieq r0.x___,r17.x000,l0.x000\n"
            "if_logicalnz r0.x000\n"
            "sample_resource(0)_sampler(0) r19.xyzw,r18.xy00\n"
            "endif\n"
            "mov r16.x___,r19.x000\n"
            "ret_dyn\n"
            "ret\n"
            "\n"
            "func 37\n"
            "mov r277.x___,l0.x000\n"
            "mov r277._y__,l0.0x00\n"
            "mov r277.__z_,l0.00x0\n"
            "mov r277.___w,l0.000x\n"
            "mov r273.xyzw,r277.xyzw\n"
            "ftoi r429.xy__,r270.xy00\n"
            "mov r278.xy__,r429.xy00\n"
            "mov r274.xy__,r278.xy00\n"
            "mov r430.x___,r274.y000\n"
            "imul r279.x___,r430.x000,r272.x000\n"
            "iadd r280.x___,r279.x000,r274.x000\n"
            "mov r275.x___,r280.x000\n"
            "mov r433.x___,r275.x000\n"
            "imax r431.x___,r275.x000,r433_neg(xyzw).x000\n"
            "mov r434.x___,r271.x000\n"
            "imax r432.x___,r271.x000,r434_neg(xyzw).x000\n"
            "udiv r435.x___,r431.x000,r432.x000\n"
            "inegate r436.x___,r435.x000\n"
            "ixor r437.x___,r275.x000,r271.x000\n"
            "and r437.x___,r437.x000,l5.x000\n"
            "cmov_logical r281.x___,r437.x000,r436.x000,r435.x000\n"
            "mov r276.x___,r281.x000\n"
            "imul r282.x___,r276.x000,r271.x000\n"
            "iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
            "mov r273.x___,r283.x000\n"
            "mov r438.x___,r271.y000\n"
            "mov r441.x___,r276.x000\n"
            "imax r439.x___,r276.x000,r441_neg(xyzw).x000\n"
            "mov r442.x___,r438.x000\n"
            "imax r440.x___,r438.x000,r442_neg(xyzw).x000\n"
            "udiv r443.x___,r439.x000,r440.x000\n"
            "inegate r444.x___,r443.x000\n"
            "ixor r445.x___,r276.x000,r438.x000\n"
            "and r445.x___,r445.x000,l5.x000\n"
            "cmov_logical r284.x___,r445.x000,r444.x000,r443.x000\n"
            "mov r273.__z_,r284.00x0\n"
            "mov r446.x___,r273.z000\n"
            "mov r447.x___,r271.y000\n"
            "imul r285.x___,r446.x000,r447.x000\n"
            "iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
            "mov r273._y__,r286.0x00\n"
            "mov r269.xyzw,r273.xyzw\n"
            "ret_dyn\n"
            "ret\n"
            "\n"
            "func 38\n"
            "mov r295.x___,l0.x000\n"
            "mov r295._y__,l0.0x00\n"
            "mov r292.xy__,r295.xy00\n"
            "mov r293.x___,l0.x000\n"
            "mov r294.x___,l0.x000\n"
            "mov r294.x___,r289.x000\n"
            "mov r450.x___,r294.x000\n"
            "imax r448.x___,r294.x000,r450_neg(xyzw).x000\n"
            "mov r451.x___,r291.x000\n"
            "imax r449.x___,r291.x000,r451_neg(xyzw).x000\n"
            "udiv r452.x___,r448.x000,r449.x000\n"
            "inegate r453.x___,r452.x000\n"
            "ixor r454.x___,r294.x000,r291.x000\n"
            "and r454.x___,r454.x000,l5.x000\n"
            "cmov_logical r296.x___,r454.x000,r453.x000,r452.x000\n"
            "mov r293.x___,r296.x000\n"
            "imul r297.x___,r293.x000,r291.x000\n"
            "iadd r298.x___,r294.x000,r297_neg(xyzw).x000\n"
            "itof r455.x___,r298.x000\n"
            "mov r299.x___,r455.x000\n"
            "add r300.x___,r299.x000,l12.x000\n"
            "mov r292.x___,r300.x000\n"
            "itof r456.x___,r293.x000\n"
            "mov r301.x___,r456.x000\n"
            "add r302.x___,r301.x000,l12.x000\n"
            "mov r292._y__,r302.0x00\n"
            "mov r288.xy__,r292.xy00\n"
            "ret_dyn\n"
            "ret\n"
            "\n"
            "func 41\n"
            "itof r457.xy__,r376.xy00\n"
            "mov r386.xy__,r457.xy00\n"
            "mov r379.xy__,r386.xy00\n"
            "mov r458.x___,r379.y000\n"
            "mul_ieee r387.x___,r375.x000,r458.x000\n"
            "add r388.x___,r379.x000,r387.x000\n"
            "mov r381.x___,r388.x000\n"
            "mod r389.x___,r381.x000,r374.x000\n"
            "lt r390.x___,r389.x000,r373.x000\n"
            "mov r391.x___,l13_neg(xyzw).x000\n"
            "and r459.x___,r390.x000,l1.x000\n"
            "itof r459.x___,r459.x000\n"
            "cmov_logical r392.x___,r459.x000,l13.x000,r391.x000\n"
            "mov r383.x___,r392.x000\n"
            "div_zeroop(infinity) r393.x___,r381.x000,r372.x000\n"
            "round_neginf r394.x___,r393.x000\n"
            "mod r395.x___,r394.x000,l14.x000\n"
            "eq r396.x___,r395.x000,l0.x000\n"
            "mov r397.x___,l13_neg(xyzw).x000\n"
            "and r460.x___,r396.x000,l1.x000\n"
            "itof r460.x___,r460.x000\n"
            "cmov_logical r398.x___,r460.x000,l13.x000,r397.x000\n"
            "mov r382.x___,r398.x000\n"
            "mul_ieee r399.x___,r383.x000,r373.x000\n"
            "add r400.x___,r379.x000,r399.x000\n"
            "mov r380.x___,r400.x000\n"
            "div_zeroop(infinity) r401.x___,r380.x000,r375.x000\n"
            "round_neginf r402.x___,r401.x000\n"
            "mov r461.x___,r379.y000\n"
            "add r403.x___,r461.x000,r402.x000\n"
            "mov r380._y__,r403.0x00\n"
            "mod r404.x___,r380.x000,r375.x000\n"
            "mov r380.x___,r404.x000\n"
            "lt r405.x___,r380.x000,l0.x000\n"
            "if_logicalnz r405.x000\n"
            "add r406.x___,r380.x000,r375.x000\n"
            "mov r380.x___,r406.x000\n"
            "endif\n"
            "mov r407.x___,r379.x000\n"
            "mov r407._y__,r379.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r407.xy00\n"
            "call 2 \n"
            "mov r462.x___,r16.x000\n"
            "mov r408.x___,r380.x000\n"
            "mov r408._y__,r380.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r408.xy00\n"
            "call 2 \n"
            "mov r463.x___,r16.x000\n"
            "lt r409.x___,r462.x000,r463.x000\n"
            "mov r410.x___,r379.x000\n"
            "mov r410._y__,r379.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r410.xy00\n"
            "call 2 \n"
            "mov r464.x___,r16.x000\n"
            "mov r411.x___,r380.x000\n"
            "mov r411._y__,r380.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r411.xy00\n"
            "call 2 \n"
            "mov r465.x___,r16.x000\n"
            "and r466.x___,r409.x000,l1.x000\n"
            "itof r466.x___,r466.x000\n"
            "cmov_logical r412.x___,r466.x000,r464.x000,r465.x000\n"
            "mov r385.x___,r412.x000\n"
            "mov r413.x___,r379.x000\n"
            "mov r413._y__,r379.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r413.xy00\n"
            "call 2 \n"
            "mov r467.x___,r16.x000\n"
            "mov r414.x___,r380.x000\n"
            "mov r414._y__,r380.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r414.xy00\n"
            "call 2 \n"
            "mov r468.x___,r16.x000\n"
            "lt r415.x___,r468.x000,r467.x000\n"
            "mov r416.x___,r379.x000\n"
            "mov r416._y__,r379.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r416.xy00\n"
            "call 2 \n"
            "mov r469.x___,r16.x000\n"
            "mov r417.x___,r380.x000\n"
            "mov r417._y__,r380.0y00\n"
            "mov r17.x___,r370.x000\n"
            "mov r18.xy__,r417.xy00\n"
            "call 2 \n"
            "mov r470.x___,r16.x000\n"
            "and r471.x___,r415.x000,l1.x000\n"
            "itof r471.x___,r471.x000\n"
            "cmov_logical r418.x___,r471.x000,r469.x000,r470.x000\n"
            "mov r384.x___,r418.x000\n"
            "eq r419.x___,r383.x000,r382.x000\n"
            "and r472.x___,r419.x000,l1.x000\n"
            "itof r472.x___,r472.x000\n"
            "cmov_logical r420.x___,r472.x000,r385.x000,r384.x000\n"
            "mov r371.x___,r420.x000\n"
            "ret\n"
            "\n"
            "func 42\n"
            "mov r270.xy__,r422.xy00\n"
            "mov r271.xyzw,r335.xyzw\n"
            "mov r272.xyzw,r336.xyzw\n"
            "call 37 \n"
            "mov r473.xyzw,r269.xyzw\n"
            "mov r426.xyzw,r473.xyzw\n"
            "mov r425.xyzw,r426.xyzw\n"
            "mov r370.x___,l0.x000\n"
            "mov r372.x___,r327.x000\n"
            "mov r373.x___,r329.x000\n"
            "mov r374.x___,r331.x000\n"
            "mov r375.xy__,r333.xy00\n"
            "mov r376.xyzw,r425.xyzw\n"
            "mov r377.xyzw,r325.xyzw\n"
            "mov r378.xyzw,r326.xyzw\n"
            "call 41 \n"
            "mov r424.x___,r371.x000\n"
            "mov r427.x___,r424.x000\n"
            "mov r427._y__,l0.0x00\n"
            "mov r427.__z_,l0.00x0\n"
            "mov r427.___w,l0.000x\n"
            "mov r423.xyzw,r427.xyzw\n"
            "mov r421.xyzw,r423.xyzw\n"
            "ret_dyn\n"
            "ret\n"
            "\n"
            "end\n"
            "";
}
#endif // _AMDSPL_SORT_CALCODE_H
